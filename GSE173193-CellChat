rm(list = ls())
setwd("D:/2023.10/PE scRNA（GSE173193）/运行")
getwd()

#打开必要的package
if(!require(NMF))install.packages('NMF')
if(!require(circlize))devtools::install_github("jokergoo/circlize")
if(!require(ComplexHeatmap))devtools::install_github("jokergoo/ComplexHeatmap") 
if(!require(CellChat))devtools::install_github("sqjin/CellChat")
if(!require(Seurat))install.packages("Seurat")
if(!require(patchwork))install.packages("patchwork")
if(!require(cowplot))install.packages("cowplot")

#载入数据
{
  chatdata <- readRDS("./Rdata/细胞注释后的数据.rds")
class(chatdata)  ##数据类型是SeuratObject
data.input <- chatdata[["RNA"]]@data  ##要求的数据是normalized data matrix
  ##如果是seurat文件则$前为：pbmc[["RNA"]]@data
meta <- chatdata@meta.data
unique(meta$group)  ##查看数据中的分组
}

#构建control的cellchat对象
{
#构建control的cellchat对象(Secreted Signaling：旁分泌/自分泌)
{
  {
  cell.use <- rownames(meta)[meta$group == "control"]  ##只提取control的细胞
data.input <- data.input[, cell.use]
meta = meta[cell.use, ]   
  ##取出control细胞的meta信息
unique(meta$celltype)  ##celltype为细胞类型
cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
  ##创建celllchat对象，group.by依据目的确定
cellchat <- addMeta(cellchat, meta = meta)  ##添加meta
cellchat <- setIdent(cellchat, ident.use = "celltype")  
  ##设置celltype为cell identity，后续分析显示的就是各celltype之间的通讯
levels(cellchat@idents)  ##显示作为idents的细胞类型
groupSize <- as.numeric(table(cellchat@idents))  ##显示各组的细胞数目
groupSize
  ##载入数据库进行计算
CellChatDB <- CellChatDB.human  ##CellChatDB.mouse用于小鼠
showDatabaseCategory(CellChatDB)  ##展示数据库的基本组成
dplyr::glimpse(CellChatDB$interaction)  ##展示数据库内互作的记录
CellChatDB.SS  <- subsetDB(CellChatDB, search = "Secreted Signaling")
  ##取出数据库内的Secreted Signaling用作分析数据库
  ##对应物种都有Secreted Signaling, ECM-Receptor, 和Cell-Cell Contact三种interaction database
  ##Secreted Signaling：旁分泌/自分泌，ECM-Receptor：细胞外基质，Cell-Cell Contact：细胞-细胞接触相互作用
cellchat@DB <- CellChatDB.SS  ##将数据库内容载入cellchat对象中
  ##表达量预处理
cellchat <- subsetData(cellchat,features = NULL)  
  ##取出表达数据，features可以填入感兴趣的基因
cellchat <- identifyOverExpressedGenes(cellchat) 
  ##寻找高表达的基因
cellchat <- identifyOverExpressedInteractions(cellchat) 
  ##寻找高表达的通路
cellchat <- projectData(cellchat, PPI.human) 
  ##投影到PPI
cellchat <- computeCommunProb(cellchat, raw.use = F)
  ##raw.use = T默认用RNA数据计算，raw.use = F用蛋白质计算
  ##默认计算方式为type = "truncatedMean"
?computeCommunProb
  ##默认cutoff的值为20%，即表达比例在25%以下的基因会被认为是0， trim = 0.1可以调整比例阈值
cellchat <- filterCommunication(cellchat, min.cells = 10)
  ##去掉通讯数量很少的细胞
df.net <- subsetCommunication(cellchat)
write.csv(df.net,"./result/5.CellChat/control组CellChat结果（内、旁分泌）.csv")
  ##将细胞通讯预测结果以数据框的形式取出
  ##1.只取通路，数据结构更简单:df.net <- subsetCommunication(cellchat,slot.name = "netP")
  ##2指定输入与输出的细胞集群:df.net <- subsetCommunication(cellchat, sources.use = c(1,2), targets.use = c(4,5))
  ##3.指定通路提取:df.net <- subsetCommunication(cellchat, signaling = c("WNT", "TGFb"))
cellchat <- computeCommunProbPathway(cellchat)
  ##每对配受体的预测结果存在net中，每条通路的预测结果存在netp中
cellchat <- aggregateNet(cellchat)
  ##计算联路数与通讯概率，可用sources.use and targets.use指定来源与去向
}
  ##构建过程
{
  par(mfrow = c(1,2), xpd=TRUE)
  ##定义一个1行2列图片的图片区
netVisual_circle(cellchat@net$count, vertex.weight = groupSize, weight.scale = T,
                 label.edge= F, title.name = "Number of interactions")
##Number of interactions展示互作数目
netVisual_circle(cellchat@net$weight, vertex.weight = groupSize, weight.scale = T, 
                 label.edge= F, title.name = "Interaction weights/strength")
##Interaction weights/strength展示互作权重
##targets.use仅展示特定的通路
##得到control组各类细胞间相互作用图（内、旁分泌）-保存图片（1500*1000）

}
  ##可视化
saveRDS(cellchat,"./Rdata/cellchat_control（旁、内分泌）.rds")
  ##保存
}

#构建control的cellchat对象(ECM-Receptor：细胞外基质)
{
  {
    cell.use <- rownames(meta)[meta$group == "control"]  ##只提取control的细胞
    data.input <- data.input[, cell.use]
    meta = meta[cell.use, ]   
    ##取出control细胞的meta信息
    unique(meta$celltype)  ##celltype为细胞类型
    cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
    ##创建celllchat对象，group.by依据目的确定
    cellchat <- addMeta(cellchat, meta = meta)  ##添加meta
    cellchat <- setIdent(cellchat, ident.use = "celltype")  
    ##设置celltype为cell identity，后续分析显示的就是各celltype之间的通讯
    levels(cellchat@idents)  ##显示作为idents的细胞类型
    groupSize <- as.numeric(table(cellchat@idents))  ##显示各组的细胞数目
    groupSize
    ##载入数据库进行计算
    CellChatDB <- CellChatDB.human  ##CellChatDB.mouse用于小鼠
    showDatabaseCategory(CellChatDB)  ##展示数据库的基本组成
    dplyr::glimpse(CellChatDB$interaction)  ##展示数据库内互作的记录
    CellChatDB.ECM  <- subsetDB(CellChatDB, search = "ECM-Receptor")
    ##取出数据库内的Secreted Signaling用作分析数据库
    ##对应物种都有Secreted Signaling, ECM-Receptor, 和Cell-Cell Contact三种interaction database
    ##Secreted Signaling：旁分泌/自分泌，ECM-Receptor：细胞外基质，Cell-Cell Contact：细胞-细胞接触相互作用
    cellchat@DB <- CellChatDB.ECM  ##将数据库内容载入cellchat对象中
    ##表达量预处理
    cellchat <- subsetData(cellchat,features = NULL)  
    ##取出表达数据，features可以填入感兴趣的基因
    cellchat <- identifyOverExpressedGenes(cellchat) 
    ##寻找高表达的基因
    cellchat <- identifyOverExpressedInteractions(cellchat) 
    ##寻找高表达的通路
    cellchat <- projectData(cellchat, PPI.human) 
    ##投影到PPI
    cellchat <- computeCommunProb(cellchat, raw.use = F)
    ##raw.use = T默认用RNA数据计算，raw.use = F用蛋白质计算
    ##默认计算方式为type = "truncatedMean"
    ?computeCommunProb
    ##默认cutoff的值为20%，即表达比例在25%以下的基因会被认为是0， trim = 0.1可以调整比例阈值
    cellchat <- filterCommunication(cellchat, min.cells = 10)
    ##去掉通讯数量很少的细胞
    df.net <- subsetCommunication(cellchat)
    write.csv(df.net,"./result/5.CellChat/control组CellChat结果（细胞外基质）.csv")
    ##将细胞通讯预测结果以数据框的形式取出
    ##1.只取通路，数据结构更简单:df.net <- subsetCommunication(cellchat,slot.name = "netP")
    ##2指定输入与输出的细胞集群:df.net <- subsetCommunication(cellchat, sources.use = c(1,2), targets.use = c(4,5))
    ##3.指定通路提取:df.net <- subsetCommunication(cellchat, signaling = c("WNT", "TGFb"))
    cellchat <- computeCommunProbPathway(cellchat)
    ##每对配受体的预测结果存在net中，每条通路的预测结果存在netp中
    cellchat <- aggregateNet(cellchat)
    ##计算联路数与通讯概率，可用sources.use and targets.use指定来源与去向
  }
  ##构建过程
  {
    par(mfrow = c(1,2), xpd=TRUE)
    ##定义一个1行3列图片的图片区
    netVisual_circle(cellchat@net$count, vertex.weight = groupSize, weight.scale = T,
                     label.edge= F, title.name = "Number of interactions")
    ##Number of interactions展示互作数目
    netVisual_circle(cellchat@net$weight, vertex.weight = groupSize, weight.scale = T, 
                     label.edge= F, title.name = "Interaction weights/strength")
    ##Interaction weights/strength展示互作权重
    ##得到control组各类细胞间相互作用图（细胞外基质）-保存图片（1500*1000）
    }
    
  ##可视化
  saveRDS(cellchat,"./Rdata/cellchat_control（细胞外基质）.rds")
  ##保存
}

#构建control的cellchat对象(Cell-Cell Contact：细胞-细胞接触相互作用)
{
  {
    cell.use <- rownames(meta)[meta$group == "control"]  ##只提取control的细胞
    data.input <- data.input[, cell.use]
    meta = meta[cell.use, ]   
    ##取出control细胞的meta信息
    unique(meta$celltype)  ##celltype为细胞类型
    cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
    ##创建celllchat对象，group.by依据目的确定
    cellchat <- addMeta(cellchat, meta = meta)  ##添加meta
    cellchat <- setIdent(cellchat, ident.use = "celltype")  
    ##设置celltype为cell identity，后续分析显示的就是各celltype之间的通讯
    levels(cellchat@idents)  ##显示作为idents的细胞类型
    groupSize <- as.numeric(table(cellchat@idents))  ##显示各组的细胞数目
    groupSize
    ##载入数据库进行计算
    CellChatDB <- CellChatDB.human  ##CellChatDB.mouse用于小鼠
    showDatabaseCategory(CellChatDB)  ##展示数据库的基本组成
    dplyr::glimpse(CellChatDB$interaction)  ##展示数据库内互作的记录
    CellChatDB.ECM  <- subsetDB(CellChatDB, search = "Cell-Cell Contact")
    ##取出数据库内的Secreted Signaling用作分析数据库
    ##对应物种都有Secreted Signaling, ECM-Receptor, 和Cell-Cell Contact三种interaction database
    ##Secreted Signaling：旁分泌/自分泌，ECM-Receptor：细胞外基质，Cell-Cell Contact：细胞-细胞接触相互作用
    cellchat@DB <- CellChatDB.ECM  ##将数据库内容载入cellchat对象中
    ##表达量预处理
    cellchat <- subsetData(cellchat,features = NULL)  
    ##取出表达数据，features可以填入感兴趣的基因
    cellchat <- identifyOverExpressedGenes(cellchat) 
    ##寻找高表达的基因
    cellchat <- identifyOverExpressedInteractions(cellchat) 
    ##寻找高表达的通路
    cellchat <- projectData(cellchat, PPI.human) 
    ##投影到PPI
    cellchat <- computeCommunProb(cellchat, raw.use = F)
    ##raw.use = T默认用RNA数据计算，raw.use = F用蛋白质计算
    ##默认计算方式为type = "truncatedMean"
    ?computeCommunProb
    ##默认cutoff的值为20%，即表达比例在25%以下的基因会被认为是0， trim = 0.1可以调整比例阈值
    cellchat <- filterCommunication(cellchat, min.cells = 10)
    ##去掉通讯数量很少的细胞
    df.net <- subsetCommunication(cellchat)
    write.csv(df.net,"./result/5.CellChat/control组CellChat结果（细胞-细胞接触）.csv")
    ##将细胞通讯预测结果以数据框的形式取出
    ##1.只取通路，数据结构更简单:df.net <- subsetCommunication(cellchat,slot.name = "netP")
    ##2指定输入与输出的细胞集群:df.net <- subsetCommunication(cellchat, sources.use = c(1,2), targets.use = c(4,5))
    ##3.指定通路提取:df.net <- subsetCommunication(cellchat, signaling = c("WNT", "TGFb"))
    cellchat <- computeCommunProbPathway(cellchat)
    ##每对配受体的预测结果存在net中，每条通路的预测结果存在netp中
    cellchat <- aggregateNet(cellchat)
    ##计算联路数与通讯概率，可用sources.use and targets.use指定来源与去向
  }
  ##构建过程
  {
    par(mfrow = c(1,2), xpd=TRUE)
    ##定义一个1行2列图片的图片区
    netVisual_circle(cellchat@net$count, vertex.weight = groupSize, weight.scale = T,
                     label.edge= F, title.name = "Number of interactions")
    ##Number of interactions展示互作数目
    netVisual_circle(cellchat@net$weight, vertex.weight = groupSize, weight.scale = T, 
                     label.edge= F, title.name = "Interaction weights/strength")
    ##得到control组各类细胞间相互作用图（细胞-细胞接触）-保存图片（1500*1000）
    ##可视化
  }
  saveRDS(cellchat,"./Rdata/cellchat_control（细胞-细胞接触）.rds")
  ##保存
}
}

#构建PE的cellchat对象
{
  #构建PE的cellchat对象(Secreted Signaling：旁分泌/自分泌)
  {
    {
      cell.use <- rownames(meta)[meta$group == "PE"]  ##只提取PE的细胞
      data.input <- data.input[, cell.use]
      meta = meta[cell.use, ]   
      ##取出control细胞的meta信息
      unique(meta$celltype)  ##celltype为细胞类型
      cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
      ##创建celllchat对象，group.by依据目的确定
      cellchat <- addMeta(cellchat, meta = meta)  ##添加meta
      cellchat <- setIdent(cellchat, ident.use = "celltype")  
      ##设置celltype为cell identity，后续分析显示的就是各celltype之间的通讯
      levels(cellchat@idents)  ##显示作为idents的细胞类型
      groupSize <- as.numeric(table(cellchat@idents))  ##显示各组的细胞数目
      groupSize
      ##载入数据库进行计算
      CellChatDB <- CellChatDB.human  ##CellChatDB.mouse用于小鼠
      showDatabaseCategory(CellChatDB)  ##展示数据库的基本组成
      dplyr::glimpse(CellChatDB$interaction)  ##展示数据库内互作的记录
      CellChatDB.SS  <- subsetDB(CellChatDB, search = "Secreted Signaling")
      ##取出数据库内的Secreted Signaling用作分析数据库
      ##对应物种都有Secreted Signaling, ECM-Receptor, 和Cell-Cell Contact三种interaction database
      ##Secreted Signaling：旁分泌/自分泌，ECM-Receptor：细胞外基质，Cell-Cell Contact：细胞-细胞接触相互作用
      cellchat@DB <- CellChatDB.SS  ##将数据库内容载入cellchat对象中
      ##表达量预处理
      cellchat <- subsetData(cellchat,features = NULL)  
      ##取出表达数据，features可以填入感兴趣的基因
      cellchat <- identifyOverExpressedGenes(cellchat) 
      ##寻找高表达的基因
      cellchat <- identifyOverExpressedInteractions(cellchat) 
      ##寻找高表达的通路
      cellchat <- projectData(cellchat, PPI.human) 
      ##投影到PPI
      cellchat <- computeCommunProb(cellchat, raw.use = F)
      ##raw.use = T默认用RNA数据计算，raw.use = F用蛋白质计算
      ##默认计算方式为type = "truncatedMean"
      ?computeCommunProb
      ##默认cutoff的值为20%，即表达比例在25%以下的基因会被认为是0， trim = 0.1可以调整比例阈值
      cellchat <- filterCommunication(cellchat, min.cells = 10)
      ##去掉通讯数量很少的细胞
      df.net <- subsetCommunication(cellchat)
      write.csv(df.net,"./result/5.CellChat/PE组CellChat结果（内、旁分泌）.csv")
      ##将细胞通讯预测结果以数据框的形式取出
      ##1.只取通路，数据结构更简单:df.net <- subsetCommunication(cellchat,slot.name = "netP")
      ##2指定输入与输出的细胞集群:df.net <- subsetCommunication(cellchat, sources.use = c(1,2), targets.use = c(4,5))
      ##3.指定通路提取:df.net <- subsetCommunication(cellchat, signaling = c("WNT", "TGFb"))
      cellchat <- computeCommunProbPathway(cellchat)
      ##每对配受体的预测结果存在net中，每条通路的预测结果存在netp中
      cellchat <- aggregateNet(cellchat)
      ##计算联路数与通讯概率，可用sources.use and targets.use指定来源与去向
    }
    ##构建过程
    {
      par(mfrow = c(1,2), xpd=TRUE)
      ##定义一个1行2列图片的图片区
      netVisual_circle(cellchat@net$count, vertex.weight = groupSize, weight.scale = T,
                       label.edge= F, title.name = "Number of interactions")
      ##Number of interactions展示互作数目
      netVisual_circle(cellchat@net$weight, vertex.weight = groupSize, weight.scale = T, 
                       label.edge= F, title.name = "Interaction weights/strength")
      ##Interaction weights/strength展示互作权重
      ##targets.use仅展示特定的通路
      ##得到PE组各类细胞间相互作用图（内、旁分泌）-保存图片（1500*1000）
      
    }
    ##可视化
    saveRDS(cellchat,"./Rdata/cellchat_PE（旁、内分泌）.rds")
    ##保存
  }
  
  #构建PE的cellchat对象(ECM-Receptor：细胞外基质)
  {
    {
      cell.use <- rownames(meta)[meta$group == "PE"]  ##只提取control的细胞
      data.input <- data.input[, cell.use]
      meta = meta[cell.use, ]   
      ##取出control细胞的meta信息
      unique(meta$celltype)  ##celltype为细胞类型
      cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
      ##创建celllchat对象，group.by依据目的确定
      cellchat <- addMeta(cellchat, meta = meta)  ##添加meta
      cellchat <- setIdent(cellchat, ident.use = "celltype")  
      ##设置celltype为cell identity，后续分析显示的就是各celltype之间的通讯
      levels(cellchat@idents)  ##显示作为idents的细胞类型
      groupSize <- as.numeric(table(cellchat@idents))  ##显示各组的细胞数目
      groupSize
      ##载入数据库进行计算
      CellChatDB <- CellChatDB.human  ##CellChatDB.mouse用于小鼠
      showDatabaseCategory(CellChatDB)  ##展示数据库的基本组成
      dplyr::glimpse(CellChatDB$interaction)  ##展示数据库内互作的记录
      CellChatDB.ECM  <- subsetDB(CellChatDB, search = "ECM-Receptor")
      ##取出数据库内的Secreted Signaling用作分析数据库
      ##对应物种都有Secreted Signaling, ECM-Receptor, 和Cell-Cell Contact三种interaction database
      ##Secreted Signaling：旁分泌/自分泌，ECM-Receptor：细胞外基质，Cell-Cell Contact：细胞-细胞接触相互作用
      cellchat@DB <- CellChatDB.ECM  ##将数据库内容载入cellchat对象中
      ##表达量预处理
      cellchat <- subsetData(cellchat,features = NULL)  
      ##取出表达数据，features可以填入感兴趣的基因
      cellchat <- identifyOverExpressedGenes(cellchat) 
      ##寻找高表达的基因
      cellchat <- identifyOverExpressedInteractions(cellchat) 
      ##寻找高表达的通路
      cellchat <- projectData(cellchat, PPI.human) 
      ##投影到PPI
      cellchat <- computeCommunProb(cellchat, raw.use = F)
      ##raw.use = T默认用RNA数据计算，raw.use = F用蛋白质计算
      ##默认计算方式为type = "truncatedMean"
      ?computeCommunProb
      ##默认cutoff的值为20%，即表达比例在25%以下的基因会被认为是0， trim = 0.1可以调整比例阈值
      cellchat <- filterCommunication(cellchat, min.cells = 10)
      ##去掉通讯数量很少的细胞
      df.net <- subsetCommunication(cellchat)
      write.csv(df.net,"./result/5.CellChat/PE组CellChat结果（细胞外基质）.csv")
      ##将细胞通讯预测结果以数据框的形式取出
      ##1.只取通路，数据结构更简单:df.net <- subsetCommunication(cellchat,slot.name = "netP")
      ##2指定输入与输出的细胞集群:df.net <- subsetCommunication(cellchat, sources.use = c(1,2), targets.use = c(4,5))
      ##3.指定通路提取:df.net <- subsetCommunication(cellchat, signaling = c("WNT", "TGFb"))
      cellchat <- computeCommunProbPathway(cellchat)
      ##每对配受体的预测结果存在net中，每条通路的预测结果存在netp中
      cellchat <- aggregateNet(cellchat)
      ##计算联路数与通讯概率，可用sources.use and targets.use指定来源与去向
    }
    ##构建过程
    {
      par(mfrow = c(1,2), xpd=TRUE)
      ##定义一个1行3列图片的图片区
      netVisual_circle(cellchat@net$count, vertex.weight = groupSize, weight.scale = T,
                       label.edge= F, title.name = "Number of interactions")
      ##Number of interactions展示互作数目
      netVisual_circle(cellchat@net$weight, vertex.weight = groupSize, weight.scale = T, 
                       label.edge= F, title.name = "Interaction weights/strength")
      ##Interaction weights/strength展示互作权重
      ##得到PE组各类细胞间相互作用图（细胞外基质）-保存图片（1500*1000）
    }
    
    ##可视化
    saveRDS(cellchat,"./Rdata/cellchat_PE（细胞外基质）.rds")
    ##保存
  }
  
  #构建PE的cellchat对象(Cell-Cell Contact：细胞-细胞接触相互作用)
  {
    {
      cell.use <- rownames(meta)[meta$group == "PE"]  ##只提取control的细胞
      data.input <- data.input[, cell.use]
      meta = meta[cell.use, ]   
      ##取出control细胞的meta信息
      unique(meta$celltype)  ##celltype为细胞类型
      cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
      ##创建celllchat对象，group.by依据目的确定
      cellchat <- addMeta(cellchat, meta = meta)  ##添加meta
      cellchat <- setIdent(cellchat, ident.use = "celltype")  
      ##设置celltype为cell identity，后续分析显示的就是各celltype之间的通讯
      levels(cellchat@idents)  ##显示作为idents的细胞类型
      groupSize <- as.numeric(table(cellchat@idents))  ##显示各组的细胞数目
      groupSize
      ##载入数据库进行计算
      CellChatDB <- CellChatDB.human  ##CellChatDB.mouse用于小鼠
      showDatabaseCategory(CellChatDB)  ##展示数据库的基本组成
      dplyr::glimpse(CellChatDB$interaction)  ##展示数据库内互作的记录
      CellChatDB.CC  <- subsetDB(CellChatDB, search = "Cell-Cell Contact")
      ##取出数据库内的Secreted Signaling用作分析数据库
      ##对应物种都有Secreted Signaling, ECM-Receptor, 和Cell-Cell Contact三种interaction database
      ##Secreted Signaling：旁分泌/自分泌，ECM-Receptor：细胞外基质，Cell-Cell Contact：细胞-细胞接触相互作用
      cellchat@DB <- CellChatDB.CC  ##将数据库内容载入cellchat对象中
      ##表达量预处理
      cellchat <- subsetData(cellchat,features = NULL)  
      ##取出表达数据，features可以填入感兴趣的基因
      cellchat <- identifyOverExpressedGenes(cellchat) 
      ##寻找高表达的基因
      cellchat <- identifyOverExpressedInteractions(cellchat) 
      ##寻找高表达的通路
      cellchat <- projectData(cellchat, PPI.human) 
      ##投影到PPI
      cellchat <- computeCommunProb(cellchat, raw.use = F)
      ##raw.use = T默认用RNA数据计算，raw.use = F用蛋白质计算
      ##默认计算方式为type = "truncatedMean"
      ?computeCommunProb
      ##默认cutoff的值为20%，即表达比例在25%以下的基因会被认为是0， trim = 0.1可以调整比例阈值
      cellchat <- filterCommunication(cellchat, min.cells = 10)
      ##去掉通讯数量很少的细胞
      df.net <- subsetCommunication(cellchat)
      write.csv(df.net,"./result/5.CellChat/PE组CellChat结果（细胞-细胞接触）.csv")
      ##将细胞通讯预测结果以数据框的形式取出
      ##1.只取通路，数据结构更简单:df.net <- subsetCommunication(cellchat,slot.name = "netP")
      ##2指定输入与输出的细胞集群:df.net <- subsetCommunication(cellchat, sources.use = c(1,2), targets.use = c(4,5))
      ##3.指定通路提取:df.net <- subsetCommunication(cellchat, signaling = c("WNT", "TGFb"))
      cellchat <- computeCommunProbPathway(cellchat)
      ##每对配受体的预测结果存在net中，每条通路的预测结果存在netp中
      cellchat <- aggregateNet(cellchat)
      ##计算联路数与通讯概率，可用sources.use and targets.use指定来源与去向
    }
    ##构建过程
    {
      par(mfrow = c(1,2), xpd=TRUE)
      ##定义一个1行2列图片的图片区
      netVisual_circle(cellchat@net$count, vertex.weight = groupSize, weight.scale = T,
                       label.edge= F, title.name = "Number of interactions")
      ##Number of interactions展示互作数目
      netVisual_circle(cellchat@net$weight, vertex.weight = groupSize, weight.scale = T, 
                       label.edge= F, title.name = "Interaction weights/strength")
      ##得到PE组各类细胞间相互作用图（细胞-细胞接触）-保存图片（1500*1000）
      ##可视化
    }
    saveRDS(cellchat,"./Rdata/cellchat_PE（细胞-细胞接触）.rds")
    ##保存
  }
}

#旁、内分泌的组间比较
{
#合并control、PE数据（旁、内分泌）
{
  control_ss <- readRDS("./Rdata/cellchat_control（旁、内分泌）.rds")
control_ss <- netAnalysis_computeCentrality(control_ss, slot.name = "netP")
PE_ss <- readRDS("./Rdata/cellchat_PE（旁、内分泌）.rds")
PE_ss <- netAnalysis_computeCentrality(PE_ss, slot.name = "netP")
ss.list <- list(control = control_ss, PE = PE_ss)
cellchat_ss <- mergeCellChat(ss.list, add.names = names(ss.list),cell.prefix=TRUE)
saveRDS(cellchat_ss,"./Rdata/CellChat合并后的数据（旁、内分泌）.rds")
}
#可视化（旁、内分泌）
{
  #查看组间互作的数量和强度
gg1 <- compareInteractions(cellchat_ss, show.legend = FALSE, group = c(1,2))
gg2 <- compareInteractions(cellchat_ss, show.legend = FALSE, group = c(1,2), measure = "weight")
gg1 + gg2
  ##得到1.组间互作的数量和强度柱状图-保存pdf
#查看细胞通路在两组间的富集程度
gg3 <- rankNet(cellchat_ss, mode = "comparison", stacked = T, do.stat = TRUE)
gg4 <- rankNet(cellchat_ss, mode = "comparison", stacked = F, do.stat = TRUE)
gg3 + gg4
  ##得到2.组间细胞通路富集程度-保存pdf
#以circle plot的形式展示第二个组别中相较于第一个组别细胞通讯发生的变化，红色为上调蓝色为下调
par(mfrow = c(1,2), xpd=TRUE)
  ##定义一个1行2列图片的图片区
netVisual_diffInteraction(cellchat_ss, weight.scale = T)
netVisual_diffInteraction(cellchat_ss, weight.scale = T, measure = "weight")
  ##得到3.PE组减去control组的富集结果相减图-保存图片（1500*1000）
#以热图的形式展示第二个组别中相较于第一个组别细胞通讯发生的变化
gg5 <- netVisual_heatmap(cellchat_ss)
gg6 <- netVisual_heatmap(cellchat_ss, measure = "weight")
gg5 + gg6
  ##得到4.PE组减去control组的富集结果相减图（热图）-保存pdf
}
#研究细胞类型之间的通讯差异（旁、内分泌）
{
#数据准备
{
  levels(ss.list[[1]]@idents)
  levels(ss.list[[2]]@idents)
  ##按照组别拆分整合，确定两组间的细胞是一致的
  group.cellType <- levels(ss.list[[1]]@idents)
  group.cellType <- factor(group.cellType, levels = levels(ss.list[[1]]@idents))
  ##把数据中的细胞拆分为3大类
  object.list <- lapply(ss.list, function(x) {mergeInteractions(x, group.cellType)})
  }
#合并细胞类型
cellchat <- mergeCellChat(object.list, add.names = names(object.list))
#直接展示两组相减的结果
{
  par(mfrow = c(1,2), xpd=TRUE)
  netVisual_diffInteraction(cellchat, weight.scale = T, measure = "count.merged", label.edge = T)
  netVisual_diffInteraction(cellchat, weight.scale = T, measure = "weight.merged", label.edge = T)
  ##得到5.两组相减的结果-保存pdf
  #两组数目分别展示
  weight.max <- getMaxWeight(object.list, slot.name = c("idents", "net", "net"), attribute = c("idents","count", "count.merged"))
  par(mfrow = c(1,2), xpd=TRUE)
  for (i in 1:length(object.list)) {
    netVisual_circle(object.list[[i]]@net$count.merged, weight.scale = T, label.edge= T, edge.weight.max = weight.max[3], edge.width.max = 12, title.name = paste0("Number of interactions - ", names(object.list)[i]))
  }
  ##得到6.两组数量相减的结果-保存pdf
  #两组强度分别展示
  weight.max <- getMaxWeight(object.list, slot.name = c("idents", "net", "net"), attribute = c("idents","count", "count.merged"))
  par(mfrow = c(1,2), xpd=TRUE)
  for (i in 1:length(object.list)) {
    netVisual_circle(object.list[[i]]@net$weight.merged, weight.scale = T, label.edge= T, edge.weight.max = weight.max[3], edge.width.max = 12, title.name = paste0("Interaction strength - ", names(object.list)[i]))
  }
  ##得到7.两组强度相减的结果-保存pdf
}
#展示两组间各类细胞incoming与outcoming通讯的强度
{
num.link <- sapply(object.list, function(x) {rowSums(x@net$count)+
    colSums(x@net$count)-diag(x@net$count)})
  weight.MinMax <- c(min(num.link), max(num.link))
  ##设置散点图点的大小
  gg <- list()
  object.list[[1]] <- netAnalysis_computeCentrality(object.list[[1]])
  object.list[[2]] <- netAnalysis_computeCentrality(object.list[[2]])
  gg <- list()
  for (i in 1:length(object.list)) {
    gg[[i]] <- netAnalysis_signalingRole_scatter(object.list[[i]],
                                                 title = names(object.list)[i], 
                                                 weight.MinMax = weight.MinMax)
  }
  patchwork::wrap_plots(plots = gg)
  ##得到8.各类细胞incoming与outcoming通讯的强度-保存pdf
  }
#展示两组间各类细胞incoming与outcoming通讯的差异
{  
gg1 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "EVT")
  gg2 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Macrophage")
  gg3 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "SCT")
  gg4 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Hofbauer cell")
  gg5 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "VCT")
  gg6 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Monocyte")
  gg7 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "T cell")
  gg8 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Fibroblast")
  gg9 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Red blood cell")
  gg1+gg2+gg3+gg4
  gg5+gg6+gg7+gg8
  gg9
    ##得到9.两组间各类细胞incoming与outcoming通讯的差异-保存pdf
}
rm(gg1,gg2,gg3,gg4,gg5,gg6,gg7,gg8,gg9)
#热图显示outgoing与incoming的组间模式差异
{ 
##1.outgoing
  pathway.union <- union(object.list[[1]]@netP$pathways, object.list[[2]]@netP$pathways)
  ht1 = netAnalysis_signalingRole_heatmap(object.list[[1]], pattern = "outgoing", signaling = pathway.union, title = names(object.list)[1], width = 10, height = 12)
  ht2 = netAnalysis_signalingRole_heatmap(object.list[[2]], pattern = "outgoing", signaling = pathway.union, title = names(object.list)[2], width = 10, height = 12)
  draw(ht1 + ht2, ht_gap = unit(1.2, "cm"))
    ##得到10.outgoing的组间模式差异（热图）-保存pdf
  ##2.incoming
  ht3 = netAnalysis_signalingRole_heatmap(object.list[[1]], pattern = "incoming", signaling = pathway.union, title = names(object.list)[1], width = 10, height = 12, color.heatmap = "GnBu")
  ht4 = netAnalysis_signalingRole_heatmap(object.list[[2]], pattern = "incoming", signaling = pathway.union, title = names(object.list)[2], width = 10, height = 12, color.heatmap = "GnBu")
  draw(ht3 + ht4, ht_gap = unit(1.2, "cm"))
    ##得到11.incoming的组间模式差异（热图）-保存pdf
  ##3.整体
  ht5 = netAnalysis_signalingRole_heatmap(object.list[[1]], pattern = "all", signaling = pathway.union, title = names(object.list)[i], width = 10, height = 12, color.heatmap = "OrRd")
  ht6 = netAnalysis_signalingRole_heatmap(object.list[[2]], pattern = "all", signaling = pathway.union, title = names(object.list)[i+1], width = 10, height = 12, color.heatmap = "OrRd")
  draw(ht5 + ht6, ht_gap = unit(1.2, "cm"))
    ##得到12.整体的组间模式差异（热图）-保存pdf
  }
#配受体的气泡图
{
netVisual_bubble(cellchat, sources.use = 4, 
                   comparison = c(1, 2), angle.x = 45)
  gg1 <- netVisual_bubble(cellchat, comparison = c(1, 2), max.dataset = 2, title.name = "Increased signaling in PE", angle.x = 45, remove.isolate = T)
  gg2 <- netVisual_bubble(cellchat, comparison = c(1, 2), max.dataset = 1, title.name = "Decreased signaling in PE", angle.x = 45, remove.isolate = T)
  gg1 + gg2
  ##得到13.配受体的气泡图-保存pdf
}
#通过配受体对基因表达的角度进一步研究
pos.dataset = "PE"
features.name = pos.dataset
##1.差异计算
{
cellchat <- identifyOverExpressedGenes(cellchat, 
                                       group.dataset = "datasets", 
                                       pos.dataset = pos.dataset, 
                                       features.name = features.name, 
                                       only.pos = FALSE, thresh.pc = 0.1, 
                                       thresh.fc = 0.1, thresh.p = 1)
net <- netMappingDEG(cellchat, features.name = features.name)
  ##提取PE中的配受体对
net.up <- subsetCommunication(cellchat, net = net, datasets = "PE",
                              ligand.logFC = 0.2, receptor.logFC = NULL)
  ##提取PE中下调的配受体对
net.down <- subsetCommunication(cellchat, net = net, datasets = "PE",
                                ligand.logFC = -0.1, receptor.logFC = -0.1)
  ##提取PE中上调的配受体对
gene.up <- extractGeneSubsetFromPair(net.up, cellchat)
  ##提取PE中上调的配受体对的基因
gene.down <- extractGeneSubsetFromPair(net.down, cellchat)
  ##提取PE中下调的配受体对的基因
}
##2.可视化
{
pairLR.use.up = net.up[, "interaction_name", drop = F]
gg1 <- netVisual_bubble(cellchat, pairLR.use = pairLR.use.up, 
                        comparison = c(1, 2),  angle.x = 90, 
                        remove.isolate = T,
                        title.name = paste0("Up-regulated signaling in ", 
                                            names(object.list)[2]))
pairLR.use.down = net.down[, "interaction_name", drop = F]
gg2 <- netVisual_bubble(cellchat, pairLR.use = pairLR.use.down, 
                        comparison = c(1, 2),  angle.x = 90, remove.isolate = T,
                        title.name = paste0("Down-regulated signaling in ", 
                                            names(object.list)[2]))
gg1 + gg2
  ##得到14.上下调配受体对的气泡图-保存pdf
}
}
}

#细胞外基质的组间比较
#合并control、PE数据（旁、内分泌）
{
  control_ecm <- readRDS("./Rdata/cellchat_control（细胞外基质）.rds")
  control_ecm <- netAnalysis_computeCentrality(control_ecm, slot.name = "netP")
  PE_ecm <- readRDS("./Rdata/cellchat_PE（细胞外基质）.rds")
  PE_ecm <- netAnalysis_computeCentrality(PE_ecm, slot.name = "netP")
  ecm.list <- list(control = control_ecm, PE = PE_ecm)
  cellchat_ecm <- mergeCellChat(ecm.list, add.names = names(ecm.list),cell.prefix=TRUE)
  saveRDS(cellchat_ecm,"./Rdata/CellChat合并后的数据（细胞外基质）.rds")
}
#可视化（旁、内分泌）
{
  #查看组间互作的数量和强度
  gg1 <- compareInteractions(cellchat_ecm, show.legend = FALSE, group = c(1,2))
  gg2 <- compareInteractions(cellchat_ecm, show.legend = FALSE, group = c(1,2), measure = "weight")
  gg1 + gg2
  ##得到1.组间互作的数量和强度柱状图-保存pdf
  #查看细胞通路在两组间的富集程度
  gg3 <- rankNet(cellchat_ss, mode = "comparison", stacked = T, do.stat = TRUE)
  gg4 <- rankNet(cellchat_ss, mode = "comparison", stacked = F, do.stat = TRUE)
  gg3 + gg4
  ##得到2.组间细胞通路富集程度-保存pdf
  #以circle plot的形式展示第二个组别中相较于第一个组别细胞通讯发生的变化，红色为上调蓝色为下调
  par(mfrow = c(1,2), xpd=TRUE)
  ##定义一个1行2列图片的图片区
  netVisual_diffInteraction(cellchat_ss, weight.scale = T)
  netVisual_diffInteraction(cellchat_ss, weight.scale = T, measure = "weight")
  ##得到3.PE组减去control组的富集结果相减图-保存图片（1500*1000）
  #以热图的形式展示第二个组别中相较于第一个组别细胞通讯发生的变化
  gg5 <- netVisual_heatmap(cellchat_ss)
  gg6 <- netVisual_heatmap(cellchat_ss, measure = "weight")
  gg5 + gg6
  ##得到4.PE组减去control组的富集结果相减图（热图）-保存pdf
}
#研究细胞类型之间的通讯差异（旁、内分泌）
{
  #数据准备
  {
    levels(ss.list[[1]]@idents)
    levels(ss.list[[2]]@idents)
    ##按照组别拆分整合，确定两组间的细胞是一致的
    group.cellType <- levels(ss.list[[1]]@idents)
    group.cellType <- factor(group.cellType, levels = levels(ss.list[[1]]@idents))
    ##把数据中的细胞拆分为3大类
    object.list <- lapply(ss.list, function(x) {mergeInteractions(x, group.cellType)})
  }
  #合并细胞类型
  cellchat <- mergeCellChat(object.list, add.names = names(object.list))
  #直接展示两组相减的结果
  {
    par(mfrow = c(1,2), xpd=TRUE)
    netVisual_diffInteraction(cellchat, weight.scale = T, measure = "count.merged", label.edge = T)
    netVisual_diffInteraction(cellchat, weight.scale = T, measure = "weight.merged", label.edge = T)
    ##得到5.两组相减的结果-保存pdf
    #两组数目分别展示
    weight.max <- getMaxWeight(object.list, slot.name = c("idents", "net", "net"), attribute = c("idents","count", "count.merged"))
    par(mfrow = c(1,2), xpd=TRUE)
    for (i in 1:length(object.list)) {
      netVisual_circle(object.list[[i]]@net$count.merged, weight.scale = T, label.edge= T, edge.weight.max = weight.max[3], edge.width.max = 12, title.name = paste0("Number of interactions - ", names(object.list)[i]))
    }
    ##得到6.两组数量相减的结果-保存pdf
    #两组强度分别展示
    weight.max <- getMaxWeight(object.list, slot.name = c("idents", "net", "net"), attribute = c("idents","count", "count.merged"))
    par(mfrow = c(1,2), xpd=TRUE)
    for (i in 1:length(object.list)) {
      netVisual_circle(object.list[[i]]@net$weight.merged, weight.scale = T, label.edge= T, edge.weight.max = weight.max[3], edge.width.max = 12, title.name = paste0("Interaction strength - ", names(object.list)[i]))
    }
    ##得到7.两组强度相减的结果-保存pdf
  }
  #展示两组间各类细胞incoming与outcoming通讯的强度
  {
    num.link <- sapply(object.list, function(x) {rowSums(x@net$count)+
        colSums(x@net$count)-diag(x@net$count)})
    weight.MinMax <- c(min(num.link), max(num.link))
    ##设置散点图点的大小
    gg <- list()
    object.list[[1]] <- netAnalysis_computeCentrality(object.list[[1]])
    object.list[[2]] <- netAnalysis_computeCentrality(object.list[[2]])
    gg <- list()
    for (i in 1:length(object.list)) {
      gg[[i]] <- netAnalysis_signalingRole_scatter(object.list[[i]],
                                                   title = names(object.list)[i], 
                                                   weight.MinMax = weight.MinMax)
    }
    patchwork::wrap_plots(plots = gg)
    ##得到8.各类细胞incoming与outcoming通讯的强度-保存pdf
  }
  #展示两组间各类细胞incoming与outcoming通讯的差异
  {  
    gg1 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "EVT")
    gg2 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Macrophage")
    gg3 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "SCT")
    gg4 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Hofbauer cell")
    gg5 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "VCT")
    gg6 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Monocyte")
    gg7 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "T cell")
    gg8 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Fibroblast")
    gg9 <- netAnalysis_signalingChanges_scatter(cellchat,idents.use = "Red blood cell")
    gg1+gg2+gg3+gg4
    gg5+gg6+gg7+gg8
    gg9
    ##得到9.两组间各类细胞incoming与outcoming通讯的差异-保存pdf
  }
  #热图显示outgoing与incoming的组间模式差异
  { 
    ##1.outgoing
    pathway.union <- union(object.list[[1]]@netP$pathways, object.list[[2]]@netP$pathways)
    ht1 = netAnalysis_signalingRole_heatmap(object.list[[1]], pattern = "outgoing", signaling = pathway.union, title = names(object.list)[i], width = 5, height = 6)
    ht2 = netAnalysis_signalingRole_heatmap(object.list[[2]], pattern = "outgoing", signaling = pathway.union, title = names(object.list)[i+1], width = 5, height = 6)
    draw(ht1 + ht2, ht_gap = unit(0.5, "cm"))
    ##得到10.outgoing的组间模式差异（热图）-保存图片（1500*1000）
    ##2.incoming
    ht3 = netAnalysis_signalingRole_heatmap(object.list[[1]], pattern = "incoming", signaling = pathway.union, title = names(object.list)[i], width = 5, height = 6, color.heatmap = "GnBu")
    ht4 = netAnalysis_signalingRole_heatmap(object.list[[2]], pattern = "incoming", signaling = pathway.union, title = names(object.list)[i+1], width = 5, height = 6, color.heatmap = "GnBu")
    draw(ht3 + ht4, ht_gap = unit(0.5, "cm"))
    ##得到11.incoming的组间模式差异（热图）-保存图片（1500*1000）
    ##3.整体
    ht5 = netAnalysis_signalingRole_heatmap(object.list[[1]], pattern = "all", signaling = pathway.union, title = names(object.list)[i], width = 5, height = 6, color.heatmap = "OrRd")
    ht6 = netAnalysis_signalingRole_heatmap(object.list[[2]], pattern = "all", signaling = pathway.union, title = names(object.list)[i+1], width = 5, height = 6, color.heatmap = "OrRd")
    draw(ht5 + ht6, ht_gap = unit(0.5, "cm"))
    ##得到12.整体的组间模式差异（热图）-保存图片
  }
  #配受体的气泡图
  {
    netVisual_bubble(cellchat, sources.use = 4, 
                     comparison = c(1, 2), angle.x = 45)
    gg1 <- netVisual_bubble(cellchat, sources.use = 4, targets.use = c(5:11),  comparison = c(1, 2), max.dataset = 2, title.name = "Increased signaling in PE", angle.x = 45, remove.isolate = T)
    gg2 <- netVisual_bubble(cellchat, sources.use = 4, targets.use = c(5:11),  comparison = c(1, 2), max.dataset = 1, title.name = "Decreased signaling in PE", angle.x = 45, remove.isolate = T)
    gg1 + gg2
    ##得到13.整体配受体的气泡图-保存pdf
  }
  #通过配受体对基因表达的角度进一步研究
  pos.dataset = "PE"
  features.name = pos.dataset
  ##1.差异计算
  {
    cellchat <- identifyOverExpressedGenes(cellchat, 
                                           group.dataset = "datasets", 
                                           pos.dataset = pos.dataset, 
                                           features.name = features.name, 
                                           only.pos = FALSE, thresh.pc = 0.1, 
                                           thresh.fc = 0.1, thresh.p = 1)
    net <- netMappingDEG(cellchat, features.name = features.name)
    ##提取PE中的配受体对
    net.up <- subsetCommunication(cellchat, net = net, datasets = "PE",
                                  ligand.logFC = 0.2, receptor.logFC = NULL)
    ##提取PE中下调的配受体对
    net.down <- subsetCommunication(cellchat, net = net, datasets = "PE",
                                    ligand.logFC = -0.1, receptor.logFC = -0.1)
    ##提取PE中上调的配受体对
    gene.up <- extractGeneSubsetFromPair(net.up, cellchat)
    ##提取PE中上调的配受体对的基因
    gene.down <- extractGeneSubsetFromPair(net.down, cellchat)
    ##提取PE中下调的配受体对的基因
  }
  ##2.可视化
  {
    pairLR.use.up = net.up[, "interaction_name", drop = F]
    gg1 <- netVisual_bubble(cellchat, pairLR.use = pairLR.use.up, 
                            sources.use = 4, targets.use = c(5:11), 
                            comparison = c(1, 2),  angle.x = 90, 
                            remove.isolate = T,
                            title.name = paste0("Up-regulated signaling in ", 
                                                names(object.list)[2]))
    pairLR.use.down = net.down[, "interaction_name", drop = F]
    gg2 <- netVisual_bubble(cellchat, pairLR.use = pairLR.use.down, 
                            sources.use = 4, targets.use = c(5:11), 
                            comparison = c(1, 2),  angle.x = 90, remove.isolate = T,
                            title.name = paste0("Down-regulated signaling in ", 
                                                names(object.list)[2]))
    gg1 + gg2
    ##得到14.上下调配受体对的气泡图-保存pdf
  }
}
